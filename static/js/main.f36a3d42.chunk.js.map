{"version":3,"sources":["base.jpg","bull.png","home.jsx","App.js","reportWebVitals.js","index.js"],"names":["axios","withStyles","theme","root","color","palette","getContrastText","common","white","backgroundColor","Button","require","default","useStyles","makeStyles","grow","flexGrow","clearButton","width","borderRadius","padding","fontSize","fontWeight","maxWidth","media","height","paper","spacing","margin","gridContainer","justifyContent","mainContainer","backgroundImage","image","backgroundRepeat","backgroundPosition","backgroundSize","marginTop","imageCard","boxShadow","imageCardEmpty","noImage","input","display","uploadIcon","background","tableContainer","table","tableHead","tableRow","tableCell","borderColor","tableCell1","tableBody","text","textAlign","buttonGrid","detail","flexDirection","alignItems","appbar","loader","ImageUpload","useState","selectedFile","setSelectedFile","preview","setPreview","data","setData","setImage","setIsloading","sendFile","a","formData","FormData","append","method","url","process","res","status","console","log","useEffect","objectUrl","URL","createObjectURL","undefined","parseFloat","confidence","toFixed","Fragment","className","src","alt","for","type","name","id","onChange","e","files","target","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f36a3d42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/base.4471419d.jpg\";","export default __webpack_public_path__ + \"static/media/bull.0223ce57.png\";","import { useState, useEffect } from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Paper, CardActionArea, CardMedia, Grid, TableContainer, Table, TableBody, TableHead, TableRow, TableCell, Button, CircularProgress } from \"@material-ui/core\";\r\nimport cblogo from \"./bull.png\";\r\nimport image from \"./base.jpg\";\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { common } from '@material-ui/core/colors';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport \"./home.css\";\r\nimport { AiOutlineUpload } from 'react-icons/ai';\r\nimport { IoDiamondOutline } from 'react-icons/io5';\r\n\r\nconst ColorButton = withStyles((theme) => ({\r\n  root: {\r\n    color: theme.palette.getContrastText(common.white),\r\n    backgroundColor: common.white,\r\n    '&:hover': {\r\n      backgroundColor: '#ffffff7a',\r\n    },\r\n  },\r\n}))(Button);\r\nconst axios = require(\"axios\").default;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  clearButton: {\r\n    width: \"-webkit-fill-available\",\r\n    borderRadius: \"15px\",\r\n    padding: \"15px 22px\",\r\n    color: \"#000000a6\",\r\n    fontSize: \"20px\",\r\n    fontWeight: 900,\r\n  },\r\n  root: {\r\n    maxWidth: 345,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: 400,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    margin: 'auto',\r\n    maxWidth: 500,\r\n  },\r\n  gridContainer: {\r\n    justifyContent: \"center\",\r\n    padding: \"4em 1em 0 1em\",\r\n  },\r\n  mainContainer: {\r\n    backgroundImage: `url(${image})`,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center',\r\n    backgroundSize: 'cover',\r\n    height: \"93vh\",\r\n    marginTop: \"8px\",\r\n  },\r\n  imageCard: {\r\n    margin: \"auto\",\r\n    maxWidth: 400,\r\n    height: 800,\r\n    backgroundColor: 'transparent',\r\n    boxShadow: '0px 9px 70px 0px rgb(0 0 0 / 30%) !important',\r\n    borderRadius: '15px',\r\n  },\r\n  imageCardEmpty: {\r\n    height: 'auto',\r\n  },\r\n  noImage: {\r\n    margin: \"auto\",\r\n    width: 400,\r\n    height: \"400 !important\",\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  uploadIcon: {\r\n    background: 'white',\r\n  },\r\n  tableContainer: {\r\n    backgroundColor: 'transparent !important',\r\n    boxShadow: 'none !important',\r\n  },\r\n  table: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableHead: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableRow: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  tableCell: {\r\n    fontSize: '15px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableCell1: {\r\n    fontSize: '14px',\r\n    backgroundColor: 'transparent !important',\r\n    borderColor: 'transparent !important',\r\n    color: '#000000a6 !important',\r\n    fontWeight: 'bolder',\r\n    padding: '1px 24px 1px 16px',\r\n  },\r\n  tableBody: {\r\n    backgroundColor: 'transparent !important',\r\n  },\r\n  text: {\r\n    color: 'white !important',\r\n    textAlign: 'center',\r\n  },\r\n  buttonGrid: {\r\n    maxWidth: \"416px\",\r\n    width: \"100%\",\r\n  },\r\n  detail: {\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  appbar: {\r\n    background: '#be6a77',\r\n    boxShadow: 'none',\r\n    color: 'white'\r\n  },\r\n  loader: {\r\n    color: '#be6a77 !important',\r\n  }\r\n}));\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [preview, setPreview] = useState();\r\n  const [data, setData] = useState();\r\n  const [image, setImage] = useState(false);\r\n  const [isLoading, setIsloading] = useState(false);\r\n  let confidence = 0;\r\n\r\n  const sendFile = async () => {\r\n\r\n    if (image) {\r\n      let formData = new FormData();\r\n      formData.append(\"file\", selectedFile);\r\n      let res = await axios({\r\n        method: \"post\",\r\n        url: process.env.REACT_APP_API_URL,\r\n        data: formData,\r\n      });\r\n      if (res.status === 200) {\r\n        setData(res.data);\r\n        console.log(res.data);\r\n      }\r\n      setIsloading(false);\r\n    }\r\n  }\r\n\r\n  const clearData = () => {\r\n    setData(null);\r\n    setImage(false);\r\n    setSelectedFile(null);\r\n    setPreview(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedFile) {\r\n      setPreview(undefined);\r\n      return;\r\n    }\r\n    const objectUrl = URL.createObjectURL(selectedFile);\r\n    setPreview(objectUrl);\r\n  }, [selectedFile]);\r\n\r\n  useEffect(() => {\r\n    if (!preview) {\r\n      return;\r\n    }\r\n    setIsloading(true);\r\n    sendFile();\r\n\r\n  }, [preview]);\r\n\r\n  const onSelectFile = (e) => {\r\n    let files = e.target.files;\r\n    if (!files || files.length === 0) {\r\n      setSelectedFile(undefined);\r\n      setImage(false);\r\n      setData(undefined);\r\n      return;\r\n    }\r\n    setSelectedFile(files[0]);\r\n    setData(undefined);\r\n    setImage(true);\r\n\r\n  };\r\n\r\n  if (data) {\r\n    confidence = (parseFloat(data.confidence) * 100).toFixed(2);\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"menu\">\r\n      </div>\r\n      <header>\r\n        {\r\n          data ?\r\n            <div className=\"info\">\r\n              <h1>\r\n                Blight Detection In Potato\r\n              </h1>\r\n              <ul>\r\n                <li>Identified Disease : {data[\"class\"]} </li>\r\n                <li>रोग का नाम : {data[\"रोग का नाम\"]} </li>\r\n                <li>Accuracy : {data[\"confidence\"]} </li>\r\n                <li>सटीकता : {data[\"सटीकता\"]} </li>\r\n                <li>Suggested Spray : {data[\"Suggested Spray\"]} </li>\r\n                <li>सुझाया गया स्प्रे: {data[\"सुझाया गया स्प्रे\"]} </li>\r\n              </ul>\r\n            </div>\r\n            :\r\n            <div className=\"info\">\r\n              <h1>\r\n                Blight Detection In Potato\r\n              </h1>\r\n              <p>Potato is a important cash crop and blight in potatoes is very common disease. Each year, Late blight reduces the yields of potatoes and It has been estimated that late blight causes economic loss of about $300 million in United States alone. FarmTech provdes a solution by detecting blight on time and provide suggestions for its cure.</p>\r\n              <ul>\r\n                <li><IoDiamondOutline /> Accuracy upto 99%</li>\r\n                <li><IoDiamondOutline /> Detect early, cure early</li>\r\n                <li><IoDiamondOutline /> 100% free</li>\r\n              </ul>\r\n            </div>\r\n        }\r\n\r\n        <div className=\"image-upload\">\r\n\r\n          {\r\n            image ?\r\n              <div className=\"bg\">\r\n                <img src={preview} alt=\"Preview\" />\r\n              </div>\r\n\r\n              : <div className=\"show\">\r\n                <label for=\"file-input\">\r\n                  <AiOutlineUpload />\r\n                </label>\r\n                <input type=\"file\" name=\"file-input\" id=\"file-input\" onChange={onSelectFile} />\r\n              </div>\r\n          }\r\n          {\r\n            data ? <p> {data[\"class\"]}</p> : <div className=\"upload\">Upload the image</div>\r\n          }\r\n        </div>\r\n      </header>\r\n      {/* <Container maxWidth={false} className={classes.mainContainer} disableGutters={true}>\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          spacing={2}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card className={`${classes.imageCard} ${!image ? classes.imageCardEmpty : ''}`}>\r\n              {image && <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={preview}\r\n                  component=\"image\"\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n              </CardActionArea>\r\n              }\r\n              {!image && <CardContent className={classes.content}>\r\n                <DropzoneArea\r\n                  acceptedFiles={['image/*']}\r\n                  dropzoneText={\"Drag and drop an image of a potato plant leaf to process\"}\r\n                  onChange={onSelectFile}\r\n                />\r\n              </CardContent>}\r\n              {data && <CardContent className={classes.detail}>\r\n                <TableContainer component={Paper} className={classes.tableContainer}>\r\n                  <Table className={classes.table} size=\"small\" aria-label=\"simple table\">\r\n\r\n                    \r\n                    \r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>'Title':{data[\"Title\"]}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>'शीर्षक':{data[\"शीर्षक\"]}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Label:{data.class}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>'रोग का नाम':{data[\"रोग का नाम\"]}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>ConConfidencefidence:{confidence}%</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>'सटीकता':{data[\"सटीकता\"]}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>Spray:{data[\"Suggested Spray\"]}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableHead className={classes.tableHead}>\r\n                      <TableRow className={classes.tableRow}>\r\n                        <TableCell className={classes.tableCell1}>सुझाया गया स्प्रे:{data[\"सुझाया गया स्प्रे\"]}</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n                  </Table>\r\n                </TableContainer>\r\n              </CardContent>}\r\n              {isLoading && <CardContent className={classes.detail}>\r\n                <CircularProgress color=\"secondary\" className={classes.loader} />\r\n                <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                  Processing\r\n                </Typography>\r\n              </CardContent>}\r\n            </Card>\r\n          </Grid>\r\n          {data &&\r\n            <Grid item className={classes.buttonGrid} >\r\n\r\n              <ColorButton variant=\"contained\" className={classes.clearButton} color=\"primary\" component=\"span\" size=\"large\" onClick={clearData} startIcon={<Clear fontSize=\"large\" />}>\r\n                Clear\r\n              </ColorButton>\r\n            </Grid>}\r\n        </Grid >\r\n      </Container > */}\r\n    </React.Fragment >\r\n  );\r\n};\r\n","import { ImageUpload } from \"./home.jsx\";\n\nfunction App() {\n  return <ImageUpload />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}